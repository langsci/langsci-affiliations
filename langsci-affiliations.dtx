% \iffalse meta-comment
% !TeX program = xelatex
% !TeX encoding = utf-8
%<*internal>
\begingroup
%</internal>
%<*install>
\input{l3docstrip.tex}
\keepsilent
\askforoverwritefalse
\preamble
------------------------------------------------------------------------------

langsci-affiliations collects, orders, and outputs author-affiliation pairs.
It makes use of data types from LaTeX3.

The package is aimed to be helpful to class authors, i.e. those who design
and maintain document templates in publishing houses, universities, etc. The 
package is probably of only limited use to document authors/end users.

langsci-affiliations was developed at Language Science Press to help in the
production of scientific texts in linguistics.

Copyright (C) 2023â€“2024 by Language Science Press

This work consists of the file  langsci-affiliations.dtx 
          and the derived files langsci-affiliations.sty,
                                langsci-affiliations.pdf.
                                
It may be distributed and/or modified under the conditions of the
LaTeX Project Public License (LPPL), either version 1.3c of this
license or (at your option) any later version. The latest version
of this license is at <http://www.latex-project.org/lppl.txt>.

This work is ``maintained'' (per LPPL maintenance status) by
Felix Kopecky <felix.kopecky@langsci-press.org>.

The development version can be found at

   https://github.com/langsci/langsci-affiliations

for those who are interested. Pull requests are welcome.

Please report any bugs or feature requests to 

   https://github.com/langsci/langsci-affiliations/issues

------------------------------------------------------------------------------
\endpreamble
\declarepreamble\minimalpreamble
\endpreamble
\postamble
\endpostamble
\usedir{tex/latex/langsci-affiliations}
\generate{\file{\jobname.sty}{\from{\jobname.dtx}{package}}}
%</install>
%<install>\endbatchfile
%<*internal>
\usepreamble\minimalpreamble
\usepostamble\defaultpostamble
\endgroup
%</internal>
%<*driver>
\documentclass{l3doc}
\usepackage{langsci-affiliations}
\usepackage[british]{babel}
\usepackage{tikz}
  \usetikzlibrary{arrows, arrows.meta, positioning}
\usepackage{enumitem}
  \setlist[description]{font=\normalfont}
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
% \title{\pkg{langsci-affiliations}}
% \author{Felix Kopecky\thanks{\protect\url{mailto:felix.kopecky@langsci-press.org}. 
% 		Please submit bug reports and feature requests to
% 		\protect\url{https://github.com/langsci/langsci-affiliations/issues}.
% 	}}
% \date{Version 1.3 -- \today}
% \maketitle
% \frenchspacing
% \begin{documentation}
% \section{User guide}
% This package provides a command \cmd{\ResolveAffiliations}, which collects author--affiliation pairs and outputs them according to the user configuration. It is aimed at class authors, i.e. maintainers of document templates in publishing houses, universities, etc.

% \begin{function}{\ResolveAffiliations}
% \begin{syntax} 
%   \cs{ResolveAffiliations} \oarg{options} \marg{pairs of authors and affiliations}
% \end{syntax} 
% Takes the \marg{pairs of authors and affiliations}, orders them internally and outputs them according to the \oarg{options}. 
% 
% \marg{Pairs of authors and affiliations} is a list of authors and affiliations, separated by a customisable string. The defaults for the separators are \verb+and+ for authors and \verb+;+ for affiliations. The conventional author separator \cs{and} is automatically converted to the chosen author separator. Affiliations are given within \cs{affiliation} within the \marg{pairs} argument. This command is not defined by this package and possibly existing definitions are left unchanged. 
% 
% For example:
% 
% \begin{verbatim} 
% \ResolveAffiliations{
%   A. U. Thor\affiliation{University of the Moon; University of Mars} 
%   and B. U. Thor\affiliation{University of Mars}
% }
% \end{verbatim} 
% results in:
% 
% \ResolveAffiliations[output authors font=\normalsize]{
%   A. U. Thor\affiliation{University of the Moon; University of Mars} 
%   and B. U. Thor\affiliation{University of Mars}
% }\\
% 
% \noindent The output can be customised using the \oarg{options}. They are described below.
% \end{function}

% \begin{function}{\SetupAffiliations}
%   \begin{syntax}
%     \cs{SetupAffiliations} \marg{options}
%   \end{syntax}
% Options can be set either globally or locally. With \cs{SetupAffiliations}\marg{options}, they apply globally. If they are set with \cs{ResolveAffiliations}\oarg{options}, they apply locally.
% \end{function}
% 
% \begin{description}[style=nextline]
% \item[|mark style =| \meta{style}\hfill (initially |alphabetic|)] Controls which markers should be used in the indexes of affiliations. Can be a either of \{|alphabetic|, |numeric|, |circled|, |none|\}.
% \item[|output affiliation =| \meta{boolean}\hfill (initially |true|)] Affiliations are output if true, otherwise not.
% \item[|orcid placement =| \meta{choice}\hfill (initially |none|)] Decide whether and where to place ORCIDs around author names. Valid choices are \{|none|, |before|, |after|\}.
% \item[|output in groups =| \meta{boolean}\hfill (initially |true|)] If |true|, authors and affiliations are output in the same line. When |false| each author and affiliation gets its own line. Only available if |output affiliation=true|.
% \item[|output authors font =| \meta{font commands}\hfill (initially |\cs{Large}|)] Stores the font settings for the ouput of authors.
% \item[|output affiliation font =| \meta{font commands}\hfill (initially |\cs{normalsize}|)] Stores the font settings for outputting affiliations.
% \item[|output authors paragraph format =| \meta{layout settings}\hfill (initially |\cs{raggedright}|)] Stores the paragraph settings for the author block. These settings are only applied if |output in groups=true|.
% \item[|output affiliation paragraph format =| \meta{layout settings}\hfill (initially |\cs{raggedright}|)] Stores the paragraph settings for the affiliation block. These settings are only applied if |output in groups=true|.
% \end{description}
% 
% \noindent Output separators between authors and affiliations are customisable as well:
% 
% \begin{description}[style=nextline]
% \item[|separator between two =| \meta{tokens}\hfill (initially |\char`~\&\char`~|)]
% If there are only two authors, use these \meta{tokens} to separate them.
% \item[|separator between multiple =| \meta{tokens}\hfill (initially |,\char`~|)]
% If there are more than two authors, use these \meta{tokens} to separate every pair except the last one.
% \item[|separator between final two =| \meta{tokens}\hfill (initially |\char`~\&\char`~|)]
% Use these \meta{tokens} to separate the last pair of authors if ther are more than two.
% \item[|separator between indices =| \meta{tokens}\hfill (initially |,|)]
% Use these to separate affiliation indices after each author.
% \item[|separator between affiliations =| \meta{tokens}\hfill (initially |\textvisiblespace |)]
% Separates the affiliations in the affiliation line.
% \end{description}
% 
% \noindent The way the input is digested can be customised with these two settings:
% 
% \begin{description}[style=nextline]
% \item[|input names separator =| \meta{tokens}\hfill (initially |\char`~and\char`~|)]
% Separates the author names in the input.
% \item[|input affiliation separator =| \meta{tokens}\hfill (intially |;|)]
% Separates the affiliations in the input, within dummy command \cs{affiliation}.
% \end{description}
%
% \begin{function}[added=2021-12-06]{\CountAuthorsFromAffiliations}
%   \begin{syntax}
%     \cs{CountAuthorsFromAffiliations} \oarg{options} \marg{pairs of authors and affiliations}
%   \end{syntax}
% A document command to count the numbers of authors given in a list. Useful
% for conditional behaviour of document classes based on the numbers of authors.
% It takes the same optional arguments as \cmd{\ResolveAffiliations}. For example,
% a custom author separator is recognised by this command.
% 
% The result is stored in the global integer variable \cs{g__affiliations_num_authors_int}.
% \end{function}

% \begin{function}[added=2022-09-27]{\LinkToORCIDinAffiliations}
%   \begin{syntax}
%     \cs{LinkToORCIDinAffiliations} \marg{orcid}
%   \end{syntax}
% This document command is intended as a user interface to customise the way
% ORCIDs are output. For example, it can be set to forward the input ORCIDs to
% \cs{orcidlink} from the \pkg{orcidlink} package:
% 
% \begin{verbatim}
% \RenewDocumentCommand{\LinkToORCIDinAffiliations}{ +m }
%   {%
%     \,\orcidlink{#1}%
%   }
% \end{verbatim}
% \end{function}
% 
% \end{documentation}
% 
% \begin{implementation}
% \section{Implementation}
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%    \begin{macrocode}
%<@@=affiliations>
%    \end{macrocode}
%    \begin{macrocode}
\RequirePackage{xparse}
\ProvidesExplPackage {langsci-affiliations} {2024-02-27} {1.3}
{A LaTeX3 package to collect and order authors and affiliations}
%    \end{macrocode}

%    \begin{macro}{\ResolveAffiliations}
% The top-level document command. It is grouped to keep assignments local.
%    \begin{macrocode}
\NewDocumentCommand{\ResolveAffiliations}{ O{} +m }
  {%
    \group_begin:
    \keys_set:nn { affiliations } { #1 }%
    \exp_args:No \affiliations_resolve:n { #2 }%
    \group_end:
  }
%    \end{macrocode}
%    \end{macro}

%    \begin{macro}{\LinkToORCIDinAffiliations}
% The action taken to link to an ORCID. Designed to be overwritten by the user.
%    \begin{macrocode}
\ProvideDocumentCommand{\LinkToORCIDinAffiliations}{ +m }{ #1 }
%    \end{macrocode}
%    \end{macro}

%    \begin{macro}{\CountAuthorsFromAffiliations}
% Count authors and leave the result in the global integer variable
% \cs{g__affiliations_num_authors_int}.
%    \begin{macrocode}
\NewExpandableDocumentCommand{\CountAuthorsFromAffiliations}{ O{} +m }
  {%
    \group_begin:
    \keys_set:nn { affiliations } { #1 }%
    \exp_args:No \affiliations_count_authors:n { #2 }%
    \group_end:
  }
%    \end{macrocode}
%    \end{macro}

%    \begin{macro}{\SetupAffiliations}
% A command to define options.
%    \begin{macrocode}
\NewDocumentCommand{\SetupAffiliations}{ m } 
  {%
    \keys_set:nn { affiliations } { #1 } 
  }
%    \end{macrocode}
%    \end{macro}
%    \begin{macrocode}
\keys_define:nn { affiliations }
  {
    mark~style .tl_set:N
        = \l__affiliations_style_tl,
    mark~style .initial:n
        = { alphabetic },
    output~affiliation .bool_set:N
        = \l__affiliations_output_affiliation_bool,
    output~affiliation .initial:n
        = { true },
    orcid~placement .tl_set:N
        = \l__affiliations_orcid_place_tl,
    orcid~placement .initial:n
        = { none },    
    output~in~groups .bool_set:N
        = \l__affiliations_output_grouped_bool,
    output~in~groups .initial:n
        = { true },
    separator~between~two .tl_set:N
        = \l__affiliations_separator_between_two_tl,
    separator~between~two .initial:n
        = {~\&~},
    separator~between~multiple .tl_set:N
        = \l__affiliations_separator_between_mult_tl,
    separator~between~multiple .initial:n
        = {,~},
    separator~between~final~two .tl_set:N
        = \l__affiliations_separator_between_last_two_tl,
    separator~between~final~two .initial:n
        = {~\&~},
    separator~between~indices .tl_set:N
        = \l__affiliations_indices_separator_tl,
    separator~between~indices .initial:n
        = {,},
    separator~between~affiliations .tl_set:N
        = \l__affiliations_afil_separator_tl,
    separator~between~affiliations .initial:n
        = {~},
    output~authors~paragraph~format .cs_set:Np
        = \__affiliations_output_authors_paragraph_format:,
    output~authors~paragraph~format .initial:n
        = {\raggedright},
    output~authors~font .cs_set:Np
        = \__affiliations_output_authors_font:,
    output~authors~font .initial:n
        = {\Large},
    output~affiliation~font .cs_set:Np
        = \__affiliations_output_affiliation_font:,
    output~affiliation~font .initial:n
        = {\normalsize},
    output~affiliation~paragraph~format .cs_set:Np
        = \__affiliations_output_affiliation_paragraph_format:,
    output~affiliation~paragraph~format .initial:n
        = {\raggedright},
    input~names~separator .tl_set:N
        = \l__affiliations_input_names_sep_tl,
    input~names~separator .initial:n
        = {~and~},
    input~affiliation~separator .tl_set:N
        = \l_affiliations_input_afil_sep_tl,
    input~affiliation~separator .initial:n
        = {;}
  }
%    \end{macrocode}
%    \begin{variable}[int]{
%           \prop_put:Nxx,
%           \prop_put:Nnx,
%           \seq_set_split:Nvn,
%           \l__affiliations_tmpa_clist, 
%           \l__affiliations_tmpa_int, 
%           \g__affiliations_num_authors_int,
%           \l__affiliations_affiliations_seq, 
%           \l__affiliations_authors_seq, 
%           \l__affiliations_names_seq, 
%           \l__affiliations_tmpa_seq,
%           \l__affiliations_tmpb_seq,
%           \l__affiliations_tmpa_tl,
%           \l__affiliations_tmpb_tl,
%           \l__affiliations_output_prop,
%           \l__affiliations_affiliations_prop}
% Variants and variables
%    \begin{macrocode}

\cs_generate_variant:Nn \prop_put:Nnn { Nxx }
\cs_generate_variant:Nn \prop_put:Nnn { Nnx }
\cs_generate_variant:Nn \seq_set_split:Nnn { NVV }
\cs_generate_variant:Nn \seq_set_split:Nnn { NVn }
\cs_generate_variant:Nn \tl_replace_all:Nnn { NnV }
\clist_new:N \l__affiliations_tmpa_clist
\int_new:N \l__affiliations_tmpa_int
\int_new:N \g__affiliations_num_authors_int
\seq_new:N \l__affiliations_affiliations_seq
\seq_new:N \l__affiliations_authors_seq
\seq_new:N \l__affiliations_names_seq
\seq_new:N \l__affiliations_tmpa_seq
\seq_new:N \l__affiliations_tmpb_seq
\seq_new:N \l__affiliations_tmp_affil_seq
\seq_new:N \l__affiliations_tmp_orcid_seq
\tl_new:N \l__affiliations_tmpa_tl
\tl_new:N \l__affiliations_tmpb_tl
\tl_new:N \l__affiliations_tmpc_tl
\prop_new:N \l__affiliations_tmpa_prop
\prop_new:N \l__affiliations_output_prop
\prop_new:N \l__affiliations_affiliations_prop
\prop_new:N \l__affiliations_orcids_prop
%    \end{macrocode}
%    \end{variable}
%    \begin{variable}[int]{\l__affiliations_icons_prop}
% The data for the |circled| mark style. Since this uses the \cs{char}, it is
% only available in XeLaTeX.
%    \begin{macrocode}
\prop_const_from_keyval:Nn \l__affiliations_icons_prop
  {
     0 = \char"2460,  1 = \char"2461,  2 = \char"2462,  3 = \char"2463,  
     4 = \char"2464,  5 = \char"2465,  6 = \char"2466,  7 = \char"2467,  
     8 = \char"2468,  9 = \char"2469, 10 = \char"246A, 11 = \char"246B, 
    12 = \char"246C, 13 = \char"246D, 14 = \char"246E, 15 = \char"246F, 
    16 = \char"2470, 17 = \char"2471, 18 = \char"2472, 19 = \char"2473
  }
%    \end{macrocode}
%    \end{variable}
%    \begin{macro}[int]{\__affiliations_resolve_affiliations:}
%    A helper macro to order affiliations. Is called by 
%    \cs{affiliations_resolve:n}.
%    \begin{macrocode}
\cs_new:Npn \__affiliations_resolve_affiliations: #1#2
  {
    \clist_clear:N \l__affiliations_tmpa_clist
    \tl_if_empty:nTF {#2}
      {  
        \prop_put:Nnn \l__affiliations_output_prop {#1} {}  
      }
      {
        \seq_set_split:NVn \l__affiliations_tmpa_seq 
                           \l_affiliations_input_afil_sep_tl 
                           { #2 }
        \seq_map_inline:Nn \l__affiliations_tmpa_seq 
          {
            \prop_get:NnNTF \l__affiliations_affiliations_prop 
                            {##1} 
                            \l__affiliations_tmpa_tl
              {
                \clist_put_right:NV \l__affiliations_tmpa_clist 
                                    \l__affiliations_tmpa_tl
              }
              {
                %Not yet present
                \clist_put_right:Nx \l__affiliations_tmpa_clist 
                  { 
                    \prop_count:N \l__affiliations_affiliations_prop 
                  }
                \prop_put:Nnx \l__affiliations_affiliations_prop {##1} 
                  { \prop_count:N \l__affiliations_affiliations_prop } 
              }
          }
        \prop_put:NnV \l__affiliations_output_prop 
                      {#1} 
                      \l__affiliations_tmpa_clist
      }
  }
%    \end{macrocode}
%    \end{macro}
%    \begin{macro}[int]{\__affiliations_output_affiliations:}
%    A helper macro that outputs the list of affiliations, usually below 
%    the list of authors.
%    \begin{macrocode}
\cs_new:Nn \__affiliations_output_affiliations:
  {
    \prop_map_inline:Nn \l__affiliations_affiliations_prop
      {
        \int_set:Nn \l__affiliations_tmpa_int { ##2 }
        \str_case_e:nn { \l__affiliations_style_tl }
          {
            {alphabetic} 
              { 
                \textsuperscript{\int_to_alph:n{ \int_eval:n 
                  {  \l__affiliations_tmpa_int + 1  } 
                } } 
              }
            {numeric}    
              { \textsuperscript{\int_eval:n {\l__affiliations_tmpa_int + 1} } }
            {circled}    
              { 
                \prop_item:Nn \l__affiliations_icons_prop 
                              {\l__affiliations_tmpa_int} 
              }
            {none} { }
          }
        \tl_rescan:nn {} {##1} 
        \int_compare:nNnT
          { \int_eval:n {\l__affiliations_tmpa_int + 1} } 
          < 
          { \prop_count:N \l__affiliations_affiliations_prop } 
          { \tl_use:N \l__affiliations_afil_separator_tl }
      }
  }
%    \end{macrocode}
%    \end{macro}
%    \begin{macro}[int]{\__affiliations_return_afil_text:n}
%    A helper macro that returns the affiliation marks.
%    \begin{macrocode}
\cs_new:Npn \__affiliations_return_afil_text:n #1
  {
    \int_set:Nn \l__affiliations_tmpa_int { #1 }
    \str_case_e:nn { \l__affiliations_style_tl }
      {
        {alphabetic} 
          { 
            \seq_put_right:Nx \l__affiliations_tmpb_seq 
                              { \int_to_alph:n{ \int_eval:n {#1 + 1} } } 
           }
        {numeric}    
          { 
            \seq_put_right:Nx \l__affiliations_tmpb_seq 
                              { \int_eval:n {\l__affiliations_tmpa_int + 1} } 
          }
        {circled}    
          { 
            \seq_put_right:Nx \l__affiliations_tmpb_seq 
                              { \prop_item:Nn \l__affiliations_icons_prop 
                                              { \l__affiliations_tmpa_int} } 
          }
        {none} { }
      }
  }  
%    \end{macrocode}
%    \end{macro}

%    \begin{macro}[int]{\__affiliations_output_authors:}
%    A helper macro to output the list of authors, with affiliation marks 
%    (if any).
%    \begin{macrocode}
\cs_new:Nn \__affiliations_output_authors:
  {
    \seq_clear:N \l__affiliations_tmpa_seq
    \prop_map_inline:Nn \l__affiliations_output_prop
      {
        \seq_clear:N \l__affiliations_tmpb_seq
        \clist_map_function:nN {##2} \__affiliations_return_afil_text:n
        \tl_set:Nn \l__affiliations_tmpb_tl 
          {
            \seq_use:Nn \l__affiliations_tmpb_seq 
                        {\l__affiliations_indices_separator_tl}
          }
        \str_case_e:nn { \l__affiliations_orcid_place_tl }
          {
            {none}
            {
              \seq_put_right:Nx \l__affiliations_tmpa_seq 
                {
                  \tl_rescan:nn {} {##1} 
                  \exp_not:N 
                    \textsuperscript{\tl_use:N \l__affiliations_tmpb_tl} 
                }
            }
            {before}
            {
              \seq_put_right:Nx \l__affiliations_tmpa_seq 
                {
                  \exp_not:N \__affiliations_recover_orcid:n { ##1 }
                  \tl_rescan:nn {} {##1} 
                  \exp_not:N 
                    \textsuperscript{\tl_use:N \l__affiliations_tmpb_tl} 
                }            
            }
            {after}
            {
              \seq_put_right:Nx \l__affiliations_tmpa_seq 
                {
                  \tl_rescan:nn {} {##1} 
                  \exp_not:N \__affiliations_recover_orcid:n { ##1 }
                  \exp_not:N 
                    \textsuperscript{\tl_use:N \l__affiliations_tmpb_tl} 
                }            
            }
          }
      }
    \seq_use:Nnnn \l__affiliations_tmpa_seq 
                    {\l__affiliations_separator_between_two_tl} 
                    {\l__affiliations_separator_between_mult_tl} 
                    {\l__affiliations_separator_between_last_two_tl}
  }
%    \end{macrocode}
%    \end{macro}

%    \begin{macro}[int]{\affiliations_resolve:n}
%    The main macro.
%    \begin{macrocode}
\cs_new:Npn \affiliations_resolve:n #1 
  {
    \tl_set:Nn \l__affiliations_tmpc_tl { #1 }
    \tl_replace_all:NnV \l__affiliations_tmpc_tl 
                        { \and }
                        \l__affiliations_input_names_sep_tl
    \seq_set_split:NVV \l__affiliations_names_seq
                       \l__affiliations_input_names_sep_tl
                       \l__affiliations_tmpc_tl
    \seq_map_inline:Nn \l__affiliations_names_seq
      {
        \tl_clear_new:N \l__affiliations_names_tmp_tl
        \tl_set:Nn \l__affiliations_names_tmp_tl { ##1 }
        
%    \end{macrocode}       
% Regex-parsing: We store the \marg{affiliations} found in \cs{affiliation} to
% a separate sequence, and the \marg{orcid} found in \cs{orcid} to another
% sequence.
%    \begin{macrocode}
        
        \regex_extract_once:nnN 
          {\c{affiliation} \cB. (\c[^BE].*) \cE.}
          { ##1 }
          \l__affiliations_tmp_affil_seq
          
        \regex_extract_once:nnN 
          {\c{orcid} \cB. (\c[^BE].*) \cE.}
          { ##1 }
          \l__affiliations_tmp_orcid_seq
          
%    \end{macrocode}       
%  Now strip all instances of \cs{affiliations}\marg{list} and \cs{orcid}
%  \marg{id} to receive the name of the author.
%  Also trim all leading and trailing spaces that remain after affiliation and 
%  ORCiD replacement.
%    \begin{macrocode}       
                           
        \regex_replace_all:nnN {\c{orcid} \cB. (\c[^BE].*) \cE.} 
                               {} 
                               \l__affiliations_names_tmp_tl
        \regex_replace_all:nnN {\c{affiliation} \cB. (\c[^BE].*) \cE.} 
                               {}
                               \l__affiliations_names_tmp_tl
                               
        \tl_trim_spaces:N \l__affiliations_names_tmp_tl

%    \end{macrocode}       
%  And store the data in two separate property lists.
%    \begin{macrocode}                                
                               
        \prop_put:Nxx \l__affiliations_tmpa_prop
        { \tl_use:N \l__affiliations_names_tmp_tl }
        { \seq_item:Nn \l__affiliations_tmp_affil_seq {2} }  
        
        \prop_put:Nxx \l__affiliations_orcids_prop
        { \tl_use:N \l__affiliations_names_tmp_tl }
        { \seq_item:Nn \l__affiliations_tmp_orcid_seq {2} } 
      }
    \bool_if:NTF \l__affiliations_output_affiliation_bool
      {
        \bool_if:NTF \l__affiliations_output_grouped_bool
          {
            \prop_map_function:NN \l__affiliations_tmpa_prop 
                                  \__affiliations_resolve_affiliations:
            \group_begin:
              \noindent
              \parbox {\linewidth}
                {
                  \__affiliations_output_authors_paragraph_format:
                  \__affiliations_output_authors_font:
                  \__affiliations_output_authors:
                }
            \group_end:\smallskip\\
            \group_begin:
              \parbox {\linewidth}
                {
                  \__affiliations_output_affiliation_paragraph_format:
                  \__affiliations_output_affiliation_font:
                  \__affiliations_output_affiliations:
                }
            \group_end:
          }
          {
            \seq_clear:N \l__affiliations_tmpa_seq
            \prop_map_inline:Nn \l__affiliations_tmpa_prop
              {
                \str_case_e:nn { \l__affiliations_orcid_place_tl }
                  {
                    {none} 
                    {
                      \seq_put_right:Nx \l__affiliations_tmpa_seq 
                        {
                          \group_begin:
                            \exp_not:N \__affiliations_output_authors_font:
                            \tl_rescan:nn {} {##1}
                          \group_end:\\[0.5ex]
                          \group_begin:
                            \exp_not:N \__affiliations_output_affiliation_font:
                            \tl_rescan:nn {} {##2}
                          \group_end:
                        }
                    }
                    {before} 
                    {
                      \seq_put_right:Nx \l__affiliations_tmpa_seq 
                        {
                          \group_begin:
                            \exp_not:N \__affiliations_output_authors_font:
                            \exp_not:N \__affiliations_recover_orcid:n { ##1 }
                            \tl_rescan:nn {} {##1}\\[0.5ex]
                          \group_end:
                          \group_begin:
                            \exp_not:N \__affiliations_output_affiliation_font:
                            \tl_rescan:nn {} {##2}
                          \group_end:
                        }
                    }
                    {after} 
                    {
                      \seq_put_right:Nx \l__affiliations_tmpa_seq 
                        {
                          \group_begin:
                            \exp_not:N \__affiliations_output_authors_font:
                            \tl_rescan:nn {} {##1}
                            \exp_not:N \__affiliations_recover_orcid:n { ##1 }
                            \\[0.5ex]
                          \group_end:
                          \group_begin:
                            \exp_not:N \__affiliations_output_affiliation_font:
                            \tl_rescan:nn {} {##2}
                          \group_end:
                        }
                    }
                  }
              }
            \noindent
            \seq_use:Nnnn \l__affiliations_tmpa_seq 
                            {\l__affiliations_separator_between_two_tl} 
                            {\l__affiliations_separator_between_mult_tl} 
                            {\l__affiliations_separator_between_last_two_tl}
          }
      }
      {
        \group_begin:
        \__affiliations_output_authors_font:
        \seq_clear:N \l__affiliations_tmpa_seq
        \prop_map_inline:Nn \l__affiliations_tmpa_prop
          {
            \str_case_e:nn { \l__affiliations_orcid_place_tl }
              {
                {none}
                  {
                    \seq_put_right:Nx 
                      \l__affiliations_tmpa_seq
                      { \tl_rescan:nn {} {##1} }
                  }
                {before}
                  {
                    \seq_put_right:Nx 
                      \l__affiliations_tmpa_seq 
                        {
                          \exp_not:N \__affiliations_recover_orcid:n { ##1 }
                          \tl_rescan:nn {} {##1} 
                        }
                  }
                {after}
                  {
                    \seq_put_right:Nx 
                      \l__affiliations_tmpa_seq 
                        {
                          \tl_rescan:nn {} {##1} 
                          \exp_not:N \__affiliations_recover_orcid:n { ##1 }
                        }
                  }   
                }           
          }
        \seq_use:Nnnn \l__affiliations_tmpa_seq 
                        {\l__affiliations_separator_between_two_tl} 
                        {\l__affiliations_separator_between_mult_tl} 
                        {\l__affiliations_separator_between_last_two_tl}
        \group_end:
      }
  }
%    \end{macrocode}
%    \end{macro}
%    \begin{macro}[int]{\affiliations_count_authors:n}
%    Count the numbers of authors and saves the result in the global integer 
%    variable \cs{g__affiliations_num_authors_int}.
%    \begin{macrocode}
\cs_new:Npn \affiliations_count_authors:n #1
  {
    \tl_set:Nn \l__affiliations_tmpc_tl { #1 }
    \tl_replace_all:NnV \l__affiliations_tmpc_tl
                        { \and }
                        \l__affiliations_input_names_sep_tl
    \seq_set_split:NVV \l__affiliations_names_seq
                       \l__affiliations_input_names_sep_tl
                       \l__affiliations_tmpc_tl
    \int_gset:Nn \g__affiliations_num_authors_int 
      {  \seq_count:N \l__affiliations_names_seq  }
  }
%    \end{macrocode}
%    \end{macro}
%    \begin{macro}[int]{\__affiliations_recover_orcid:n}
%    Return the ORCID associated with an author.
%    \begin{macrocode}
\cs_new:Npn \__affiliations_recover_orcid:n #1
  {
    \prop_get:NnNTF \l__affiliations_orcids_prop { #1 }
      \l__affiliations_tmpd_tl
      { 
        \tl_if_empty:NTF \l__affiliations_tmpd_tl
          % No ORCID present; no action done.
          { }
          {
            \LinkToORCIDinAffiliations{\tl_use:N \l__affiliations_tmpd_tl}
          }
      }
      % No database entry for author; no action done.
      { }
  }
%    \end{macrocode}
%    \end{macro}
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
% \end{implementation}

% \PrintIndex
